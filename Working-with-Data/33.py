# !/usr/bin/env python
# -*- coding: utf-8 -*-
# Author: Wangzhenqing <wangzhenqing1008@163.com>
# Date: 2014年12月07日18:20:39

"""
Problem 33: Write a function nearly_equal to test whether two strings are nearly equal.
Two strings a and b are nearly equal when a can be generated by a single mutation on b.
"""


def nearly_equal(word1, word2):
    d_len = len(word1)
    words = []
    d_word = word1
    start = ord('a')
    end = ord('z') + 1
    for i in range(d_len):
        if i < d_len - 1:
            # swap
            words.append(d_word[:i] + d_word[i + 1] + d_word[i] + d_word[i + 2:])
        for x in range(start, end):
            x = chr(x)
            # insert
            words.append(d_word[:i] + x + d_word[i:])
            # del
            words.append(d_word[:i] + d_word[i + 1:])
            # replace
            words.append(d_word[:i] + x + d_word[i + 1:])
    return word2 in words

print nearly_equal('python', 'perl')
print nearly_equal('perl', 'pearl')
print nearly_equal('python', 'jython')
print nearly_equal('man', 'woman')

"""
Output:
False
True
True
False
"""
